{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"max-height:1000px;max-width:1500px;overflow:auto;\">\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td> 1</td>\n",
       "      <td> 0</td>\n",
       "      <td> 3</td>\n",
       "      <td>                           Braund, Mr. Owen Harris</td>\n",
       "      <td>   male</td>\n",
       "      <td> 22</td>\n",
       "      <td> 1</td>\n",
       "      <td> 0</td>\n",
       "      <td>        A/5 21171</td>\n",
       "      <td>  7.2500</td>\n",
       "      <td>  NaN</td>\n",
       "      <td> S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td> 2</td>\n",
       "      <td> 1</td>\n",
       "      <td> 1</td>\n",
       "      <td> Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td> female</td>\n",
       "      <td> 38</td>\n",
       "      <td> 1</td>\n",
       "      <td> 0</td>\n",
       "      <td>         PC 17599</td>\n",
       "      <td> 71.2833</td>\n",
       "      <td>  C85</td>\n",
       "      <td> C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td> 3</td>\n",
       "      <td> 1</td>\n",
       "      <td> 3</td>\n",
       "      <td>                            Heikkinen, Miss. Laina</td>\n",
       "      <td> female</td>\n",
       "      <td> 26</td>\n",
       "      <td> 0</td>\n",
       "      <td> 0</td>\n",
       "      <td> STON/O2. 3101282</td>\n",
       "      <td>  7.9250</td>\n",
       "      <td>  NaN</td>\n",
       "      <td> S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td> 4</td>\n",
       "      <td> 1</td>\n",
       "      <td> 1</td>\n",
       "      <td>      Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td> female</td>\n",
       "      <td> 35</td>\n",
       "      <td> 1</td>\n",
       "      <td> 0</td>\n",
       "      <td>           113803</td>\n",
       "      <td> 53.1000</td>\n",
       "      <td> C123</td>\n",
       "      <td> S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td> 5</td>\n",
       "      <td> 0</td>\n",
       "      <td> 3</td>\n",
       "      <td>                          Allen, Mr. William Henry</td>\n",
       "      <td>   male</td>\n",
       "      <td> 35</td>\n",
       "      <td> 0</td>\n",
       "      <td> 0</td>\n",
       "      <td>           373450</td>\n",
       "      <td>  8.0500</td>\n",
       "      <td>  NaN</td>\n",
       "      <td> S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex  Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male   22      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female   38      1   \n",
       "2                             Heikkinen, Miss. Laina  female   26      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female   35      1   \n",
       "4                           Allen, Mr. William Henry    male   35      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from IPython.display import display\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "# Read in the dataset\n",
    "input_file = '/Users/adarshnair/Desktop/iPythonNotebook/DAND_P2/titanic_Data.csv'\n",
    "data = pd.read_csv(input_file)\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The various features are present for each passenger on the ship:\n",
    "- **Survived**: Outcome of survival (0 = No; 1 = Yes)\n",
    "- **Pclass**: Socio-economic class (1 = Upper class; 2 = Middle class; 3 = Lower class)\n",
    "- **Name**: Name of passenger\n",
    "- **Sex**: Sex of the passenger\n",
    "- **Age**: Age of the passenger (Some entries contain `NaN`)\n",
    "- **SibSp**: Number of siblings and spouses of the passenger aboard\n",
    "- **Parch**: Number of parents and children of the passenger aboard\n",
    "- **Ticket**: Ticket number of the passenger\n",
    "- **Fare**: Fare paid by the passenger\n",
    "- **Cabin** Cabin number of the passenger (Some entries contain `NaN`)\n",
    "- **Embarked**: Port of embarkation of the passenger (C = Cherbourg; Q = Queenstown; S = Southampton)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question to analyse:\n",
    "Which features contributed to whether a passenger survived or not?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
      "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
      "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
      "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
      "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
      "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
      "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
      "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
      "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
      "\n",
      "            Parch        Fare  \n",
      "count  891.000000  891.000000  \n",
      "mean     0.381594   32.204208  \n",
      "std      0.806057   49.693429  \n",
      "min      0.000000    0.000000  \n",
      "25%      0.000000    7.910400  \n",
      "50%      0.000000   14.454200  \n",
      "75%      0.000000   31.000000  \n",
      "max      6.000000  512.329200  \n"
     ]
    }
   ],
   "source": [
    "# Explore general stats on the dataset which includes all passengers\n",
    "print(data.describe())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       PassengerId  Survived      Pclass         Age       SibSp       Parch  \\\n",
      "count   342.000000       342  342.000000  290.000000  342.000000  342.000000   \n",
      "mean    444.368421         1    1.950292   28.343690    0.473684    0.464912   \n",
      "std     252.358840         0    0.863321   14.950952    0.708688    0.771712   \n",
      "min       2.000000         1    1.000000    0.420000    0.000000    0.000000   \n",
      "25%     250.750000         1    1.000000   19.000000    0.000000    0.000000   \n",
      "50%     439.500000         1    2.000000   28.000000    0.000000    0.000000   \n",
      "75%     651.500000         1    3.000000   36.000000    1.000000    1.000000   \n",
      "max     890.000000         1    3.000000   80.000000    4.000000    5.000000   \n",
      "\n",
      "             Fare  \n",
      "count  342.000000  \n",
      "mean    48.395408  \n",
      "std     66.596998  \n",
      "min      0.000000  \n",
      "25%     12.475000  \n",
      "50%     26.000000  \n",
      "75%     57.000000  \n",
      "max    512.329200  \n",
      "('Number of men that survived: ', 109)\n",
      "('Number of women that survived: ', 233)\n"
     ]
    }
   ],
   "source": [
    "# Statistics about only the passengers that survived.\n",
    "data_survived = data[data['Survived'] == 1]\n",
    "print(data_survived.describe())\n",
    "\n",
    "# How many women survived compared to men?\n",
    "count_men = len(data_survived[data_survived['Sex'] == 'male'])\n",
    "count_women = len(data_survived[data_survived['Sex'] == 'female'])\n",
    "print('Number of men that survived: ',count_men)\n",
    "print('Number of women that survived: ',count_women)\n",
    "# 233 women survived compared just a 109 men."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pclass\n",
      "1         136\n",
      "2          87\n",
      "3         119\n",
      "Name: Survived, dtype: int64\n"
     ]
    },
    {
     "data": {
      "image/png": [
       "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\n",
       "YnngFdLBottIR9vvJW3CT5U0vXQ+ZmZV6vI8T0mvAq82PL+pL2aaQ3FCkz8d3hfTNzOrmq8Qb2ZW\n",
       "wOFpZlbA4WlmVsDhaWZWwOFpZlbA4WlmVsDhaWZWwOFpZlbA4WlmVsDhaWZWwOFpZlbA4WlmVsDh\n",
       "aWZWwOFpZlbA4WlmVsDhaWZWwOFpZlbA4WlmVsDhaWZWwOFpZlbA4WlmVsDhaWZWwOFpZlbA4Wlm\n",
       "VsDhaWZWwOFpZlbA4WlmVsDhaWZWwOFpZlbA4WlmVsDhaWZWYGgrZx4RuwAXSBoREUOAk4GJua4T\n",
       "JZ3ZyvrMzDrTsp5nRGwAnAjU8qADgfWA0cA44LCIGNei8szMutSS8IyI4cBPgcNZEJ67AudLmi/p\n",
       "eeAiYK9W1Gdm1p1W9TzPBKYC9zUMWwt4suH5nDzMzGzA6ffwjIiDgNcl/ZgFvc7OamnrZnKzgHoV\n",
       "D0la/KUbGHLtlbRLlQ+3udt8cVTc5t1qRc9zH2BcRMwArgSWy7/PBtZsGG8kC/dEm9mEFMB9/oiI\n",
       "6O2CtkquvZJ2qfLhNnebL46K27xb/X60XdJ723+PiHcBsySNjYgvAPtHxBXAisAepINIZmYDTktP\n",
       "VSIlfHsXeQrpaPu9wDBgqqTprSrMzKwrLQ1PSY8BK+Xf20hH383MBjx/w8jMrIDD08ysgMPTzKyA\n",
       "w9PMrIDD08ysgMPTzKyAw9PMrIDD08ysgMPTzKyAw9PMrIDD08ysgMPTzKyAw9PMrIDD08ysgMPT\n",
       "zKyAw9PMrIDD08ysgMPTzKyAw9PMrIDD08ysgMPTzKyAw9PMrIDD08ysgMPTzKyAw9PMrIDD08ys\n",
       "gMPTzKyAw9PMrIDD08ysgMPTzKzA0FbMNCL2Ar4E1IF5wKHADOAUYGKu60RJZ7aiPjOz7vR7zzMi\n",
       "AvgesIOkscA3gcuAA4H1gdHAOOCwiBjX3/WZmfVEKzbbXwE+LemZ/PwuYHVgd+A8SfMlPQ9cBOzV\n",
       "gvrMzLrV75vtkh4HHgeIiBpwMvBrYBPgyYZR5wBj+rs+M7OeaNkBo4hYHrgEWBc4oJNa2vq1KDOz\n",
       "HmpJeEbEOsDNwOvAdpLmAk8AazaMNpKFe6LNzCIddOrzhyT1djlbJddeSbtU+XCbu80XR8Vt3q1W\n",
       "HDBaFfgD8EtJn5T0av7T5cD+ETEkIlYG9gCmdTO5TYBaFY98YGtQyrVX0i5VPtzmbvPFUXGbd6sV\n",
       "pyp9HlgLmBQRk/KwOvARYD3gXmAYMFXS9BbUZ2bWrVYcMPoW8K1O/nx4f9ZiZlbK3zAyMyvg8DQz\n",
       "K+DwNDMr4PA0Myvg8DQzK+DwNDMr4PA0Myvg8DQzK+DwNDMr4PA0Myvg8DQzK+DwNDMr4PA0Myvg\n",
       "8DQzK+DwNDMr4PA0Myvg8DQzK+DwNDMr4PA0Myvg8DQzK+DwNDMr4PA0Myvg8DQzK+DwNDMr4PA0\n",
       "Myvg8DQzK+DwNDMr4PA0Myvg8DQzK+DwNDMr4PA0MyswtNUFdBQROwLfBpYF7gM+Lelfra3KzGxh\n",
       "A6rnGRHvAM4DJkl6N/AIcEJrqzIzW9SACk9gInC7pIfz8ynAp1pYj5lZUwMtPNcGZjc8nwOsFBEr\n",
       "tKgeM7OmBto+z1onw9uajlyrPdZseL1eH9UX49988VHUlhmyyPCtdj++aZG3/OLrTYf35/jz5j77\n",
       "5u9Vt08V4zfWPxDasyfjbzbxkKbDB0J79mD8oY1t3mggt399fhvADbVa7Y0q2qezcRYav16vdzdO\n",
       "v4mITwG7S9olP38XcLekt7W2MjOzhQ20zfZrgQkRsX5+/jlgWgvrMTNrakD1PAEi4qPAd4BhwEPA\n",
       "3pKeb21VZmYLG3DhaWY2GAy0zXYzs0HB4WlmVsDhaWZWYKCd57lEyyf7t0l6udW1LMki4gigTvPz\n",
       "huuSTu7nkpYaETFU0hsdhq0q6Z+tqqkqDs+KRcSKpO/nfwpYKQ97jnQK1hE+k6ASmwK7A5e0upCl\n",
       "RURsAVwGrB4RlwMHSHoh//l6YGzLiquIw7N655IucLIZ6eumACNJ57D+BNi5RXUtyfYD1gGuk3Rh\n",
       "q4tZSvyAtE7fBZwMXB0R20l6tbVlVcfhWb0xkj7RYdjjwFcj4v5WFLSkk1SPiIOBgwCHZ/8YLukq\n",
       "gIj4L1Kv/3zgky2tqkI+YFS9VyNivY4D87eoXmtBPUsFSQ9Iav6lc6tCLSLeCenDC9gXGB0Rzb/A\n",
       "vgRwz7N6RwE3R8TtLLhi1BrABNLmpdmS4ERgRkR8WtJVkl6KiJ2APwBrtbi2SvgbRv0gX+R5IumS\n",
       "ezXgCeBaSc0vZ2M2CEVEAK9Ierxh2KrA5yV9q3WVVcPhaWZWwPs8zcwKODzNzAo4PM3MCvhouw0K\n",
       "ETEKeJh0O+p2NeA0Sed38pp9gf+QtFPlBdpSx+Fpg8k8SW9+zS8i1gRmRcSdkma2sC5bCjk8bdCS\n",
       "9FREPAhsGBEfB/YG3gAeJJ2k/aaImAB8F1iWdJ7ttZIOiIihwOnA+0hfWniEdP7tq82GS3qpHxbN\n",
       "BgHv87QOgFY1AAABXUlEQVRBKyK2AtYHlgf2ASZI2hR4FPgC6cpK7Q4Fvi5pAjAa2DkixgJbAdtI\n",
       "GiNpS1JIjulk+Kb9tGg2CPg8TxsU8j7Ph4D2zfOhwN9IvcmPAXMlHdPhNfuS93lGxFuAHYGN8mMS\n",
       "8FHSPtQ/AfOAa4ArJN0RESOaDa9yGW1w8Wa7DSYvN+7zbBcREzs8XwlYhYV7nn8CZgBXky5aMR6o\n",
       "SZobEZsB/wZ8ELg4In4g6dTOhlexYDb4eLPdlgTXAZPytVMBvgH8d/sfI2JlYAvgSEnTSN+1Xh8Y\n",
       "mveVXg/cImky6TKBYyJix2bD+2uBbOBzz9MGk6b7mCRdFREbAzelr1czC/gMsBvpyvHPR8R3gLsj\n",
       "4ingfuC3wHqk661+hHTU/kXgn/m1s0mb9R2HmwHe52lmVsSb7WZmBRyeZmYFHJ5mZgUcnmZmBRye\n",
       "ZmYFHJ5mZgUcnmZmBRyeZmYF/g8ZOx1NnddsuAAAAABJRU5ErkJggg==\n"
      ],
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10d63a610>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Replacing the string values for Sex with 1 for men and 0 for women\n",
    "data_subset_sex = data.replace('male', 1, inplace = False)\n",
    "data_subset_sex = data_subset_sex.replace('female', 0, inplace = False)\n",
    "\n",
    "# Replacing string values for Embarked with numberical values 1,2,3 for C,Q,S respectively.\n",
    "data_subset_embarked = data_subset_sex.replace('C', 1, inplace = False)\n",
    "data_subset_embarked = data_subset_embarked.replace('Q', 2, inplace = False)\n",
    "data_subset_embarked = data_subset_embarked.replace('S', 3, inplace = False)\n",
    "\n",
    "# Final dataframe with numerical values for Sex and Embarked values.\n",
    "data_subset_embarked.head(10)\n",
    "\n",
    "'''\n",
    "- Why did I perform this step? \n",
    "    I'd like to see how the passenger class affected survival.\n",
    "- What insight have I derived from it?\n",
    "    It is much more likely that passengers in Pclass = 1 survived as compared to the other two classes.\n",
    "- Are there limitations?\n",
    "    There are possibly other factors involved here like total number of passengers in each class to begin with.\n",
    "'''\n",
    "data_grouping_pclass = data_subset_embarked.groupby('Pclass').sum()['Survived']\n",
    "print(data_grouping_pclass)\n",
    "df = pd.DataFrame({'Pclass':data_grouping_pclass.index, 'Survived':data_grouping_pclass.values})\n",
    "ax = df['Survived'].plot(kind='bar', \n",
    "                         title =\"Number of passengers that survived based on Pclass\",\n",
    "                         figsize=(5,5),\n",
    "                         legend=True, \n",
    "                         fontsize=12)\n",
    "ax.set_xlabel(\"Pclass\",fontsize=12)\n",
    "ax.set_ylabel(\"Survived\",fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Embarked\n",
      "1            93\n",
      "2            30\n",
      "3           217\n",
      "Name: Survived, dtype: int64\n"
     ]
    },
    {
     "data": {
      "image/png": [
       "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\n",
       "4Oid8OyANQAAAABJRU5ErkJggg==\n"
      ],
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10aafa750>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "'''\n",
    "- Why did I perform this step? \n",
    "    I'd like to see how the embarked from location affected survival.\n",
    "- What insight have I derived from it?\n",
    "    Looks like passengers who embarqed from Southampton have the highest number of survivors.\n",
    "- Are there limitations?\n",
    "    There are possibly other factors involved here like the total number of passengers who boarded at each location.\n",
    "'''\n",
    "# Passengers that embarked from S have a much higher number that survived.\n",
    "data_grouping_embarked = data_subset_embarked.groupby('Embarked').sum()['Survived']\n",
    "print(data_grouping_embarked)\n",
    "df = pd.DataFrame({'Embarked':data_grouping_embarked.index, 'Survived':data_grouping_embarked.values})\n",
    "ax = df['Survived'].plot(kind='bar', \n",
    "                         title =\"Number of passengers that survived based on Embarked location\",\n",
    "                         figsize=(5,5),\n",
    "                         legend=True, \n",
    "                         fontsize=12)\n",
    "ax.set_xlabel(\"Embarked\",fontsize=12)\n",
    "ax.set_ylabel(\"Survived\",fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pclass  Survived  Embarked\n",
      "1       1         C           59\n",
      "                  Q            1\n",
      "                  S           74\n",
      "2       1         C            9\n",
      "                  Q            2\n",
      "                  S           76\n",
      "3       1         C           25\n",
      "                  Q           27\n",
      "                  S           67\n",
      "Name: Survived, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Deeper analysis of the number of passengers that survived based on Pclass and where they Embarked from.\n",
    "df = data_survived.groupby(['Pclass','Survived','Embarked'])['Survived'].sum()\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sex\n",
      "0      233\n",
      "1      109\n",
      "Name: Survived, dtype: int64\n"
     ]
    },
    {
     "data": {
      "image/png": [
       "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\n"
      ],
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10cf5de10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "'''\n",
    "- Why did I perform this step? \n",
    "    I'd like to see how the sex of an individual affected survival.\n",
    "- What insight have I derived from it?\n",
    "    Looks like female passengers have more number of survivors as compared to men. 0 -> female, 1 -> male.\n",
    "- Are there limitations?\n",
    "    Females were allowed to leave the ship first so this skew is expected.\n",
    "'''\n",
    "# It is much more likely that women survived over men.\n",
    "data_grouping_sex = data_subset_embarked.groupby('Sex').sum()['Survived']\n",
    "print(data_grouping_sex)\n",
    "df = pd.DataFrame({'Sex':data_grouping_sex.index, 'Survived':data_grouping_sex.values})\n",
    "ax = df['Survived'].plot(kind='bar', \n",
    "                         title =\"Number of passengers that survived based on sex\",\n",
    "                         figsize=(5,5),\n",
    "                         legend=True, \n",
    "                         fontsize=12)\n",
    "ax.set_xlabel(\"Sex\",fontsize=12)\n",
    "ax.set_ylabel(\"Survived\",fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parch\n",
      "0        0.343658\n",
      "1        0.550847\n",
      "2        0.500000\n",
      "3        0.600000\n",
      "4        0.000000\n",
      "5        0.200000\n",
      "6        0.000000\n",
      "Name: Survived, dtype: float64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x10d078e10>"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": [
       "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\n"
      ],
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10cecd750>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "'''\n",
    "- Why did I perform this step? \n",
    "    I'd like to see how the number of parents and childreon of passengers on board affected their survival.\n",
    "- What insight have I derived from it?\n",
    "    It is much more likely that if you had more than 3 parents or children on board, you did not survive.\n",
    "- Are there limitations?\n",
    "    This could be purely by chance or not, either way it is hard to tell.\n",
    "'''\n",
    "data_grouping_parch = data_subset_embarked.groupby('Parch').mean()['Survived']\n",
    "print(data_grouping_parch)\n",
    "data_grouping_parch.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SibSp\n",
      "0        0.345395\n",
      "1        0.535885\n",
      "2        0.464286\n",
      "3        0.250000\n",
      "4        0.166667\n",
      "5        0.000000\n",
      "8        0.000000\n",
      "Name: Survived, dtype: float64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x10d611250>"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": [
       "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\n"
      ],
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10afb1510>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "'''\n",
    "- Why did I perform this step? \n",
    "    I'd like to see how the number of siblings of passengers on board affected their survival.\n",
    "- What insight have I derived from it?\n",
    "    It is much more likely that if you had more than 2 siblings on board you did not survive.\n",
    "- Are there limitations?\n",
    "    This could be purely by chance or not, either way it is hard to tell.\n",
    "'''\n",
    "data_grouping_sibsp = data_subset_embarked.groupby('SibSp').mean()['Survived']\n",
    "print(data_grouping_sibsp)\n",
    "plt.xlabel('SibSp')\n",
    "plt.ylabel('Survived')\n",
    "data_grouping_sibsp.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# I am analysing if the passengers survived or not and hence will use the 'Survived' column and store it in \n",
    "# its own separate variable 'final'.\n",
    "# I will use this as my prediction targets.\n",
    "final = data['Survived']\n",
    "data = data.drop('Survived', axis = 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To measure the performance of our predictions, I need a metric to score my predictions against the true outcomes of survival. Since I am interested in how accurate my predictions are, I will calculate the proportion of passengers where my prediction of their survival is correct. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def accuracy_calc(truth, prediction):\n",
    "    if len(truth) == len(prediction):\n",
    "        # Find mean percentage of the number of values in our prediction matches the truth(which will be the actual\n",
    "        # account of if the passenger survived or not).\n",
    "        return 'Prediction has an accuracy of: ', (truth == prediction).mean() * 100\n",
    "    else:\n",
    "        return 'Something wrong with the accuracy calculation.'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# In this model I am making the following assumptions to check if the passenger survived or not:\n",
    "def model(data):   \n",
    "    predictions = []\n",
    "    for _, passenger in data.iterrows(): \n",
    "         if passenger['SibSp'] > 2:\n",
    "            predictions.append(0)\n",
    "         else:\n",
    "             if passenger['Parch'] > 2:\n",
    "                predictions.append(0)\n",
    "             else:\n",
    "                if passenger['Sex'] == 'female':\n",
    "                    predictions.append(1)\n",
    "                elif passenger['Sex'] == 'male' and passenger['Age'] < 10 :\n",
    "                    predictions.append(1)\n",
    "                elif passenger['Pclass'] > 1:\n",
    "                    predictions.append(0)\n",
    "                else:\n",
    "                    predictions.append(0)\n",
    "    return pd.Series(predictions)\n",
    "\n",
    "# Make the predictions\n",
    "predictions = model(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('Prediction has an accuracy of: ', 82.042648709315387)\n"
     ]
    }
   ],
   "source": [
    "# Check the accuracy of my model\n",
    "print accuracy_calc(final, predictions)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "My model has an accuracy of predicting the survival of a passenger of 82.04%."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
